




























#Root = planet
#This = species
species_can_live_on_planet = {
	hidden_trigger = {
		exists = root #somehow this appeared in the error log. No idea how!
		NAND = {
			root = { is_planet_class = pc_machine }
			NOR = {
				# GF 人形
				has_trait = GF_trait_doll

				has_trait = trait_machine_unit
				has_trait = trait_mechanical
				AND = {
					has_trait = trait_cybernetic
					exists = root.owner
					root.owner = {
						is_machine_empire = yes
						OR = {
							has_civic = civic_machine_assimilator # Assimilator empire
							has_ascension_perk = ap_mechromancy
						}
					}
				}
			}
		}
		# GF 神秘机械星球
		NAND = {
			root = { is_planet_class = pc_GF_sf_machine }
			is_robotic = no
		}
		if = {
			limit = {
				root = { is_planet_class = pc_hive }
			}
			OR = {
				has_trait = trait_hive_mind
				AND = { #Necrophage Hive Mind can have Necrophytes
					exists = root.owner
					root.owner = {
						is_hive_empire = yes
						has_origin = origin_necrophage
						prev = { species_can_be_necrophaged = yes }
					}
				}
			}
		}
	}
	if = {
		limit = {
			exists = root.owner
			root.owner = {
				has_origin = origin_clone_army
			}
			OR = {
				has_trait = trait_clone_soldier_infertile
				has_trait = trait_clone_soldier_infertile_full_potential
			}
		}
		custom_tooltip = {
			fail_text = CLONE_ARMY_FORCE_DECLINE
			root = {
				check_variable = { which = clone_pops_missing value >= 0 }
			}
		}
	}
}

#Checks whether any leaders (scientists etc) can be formed from this pop
#Root = country
#This = pop
# can_generate_leader_from_pop = {
# 	can_be_leader = yes
# }

#Root = country
#This = pop
# can_generate_military_leader_from_pop = {
# 	can_be_leader = yes
# 	can_be_military_leader = yes
# }

# Checks if a pop can be assembled
# This = Species
# Root = Planet
can_species_be_assembled = {
	is_sapient = yes
	NOT = {
		has_trait = trait_exd
	}
	NOT = {
		AND = {
			has_trait = trait_mechanical
			root.owner = { is_individual_machine = yes }
		}
	}
	NOT = {
		AND = {
			has_virtual_species_trait = yes
			root.owner = {
				is_fallen_empire = no
				has_active_tradition = tr_virtuality_finish
			}
		}
	}
	OR = {
		AND = {
			is_robotic = yes
			root = {
				check_modifier_value = {
					modifier = planet_pop_assembly_add
					value > 0
				}
				owner = {
					NOT = { has_country_flag = synth_assembly_stopped }
				}
			}
			if = {	# GF
				limit = { has_trait = GF_trait_doll }
				root.owner = {
					GF_can_build_doll_species = yes
				}
			}
		}
		AND = {
			is_organic_species = yes
			if = {
				limit = {
					root.owner = { is_hive_empire = yes }
				}
				has_trait = trait_hive_mind
			}
			else_if = {
				limit = { has_budding_trait = yes }
				root = {
					any_owned_species = { is_exact_same_species = prevprev }
				}
			}
			else_if = {
				limit = { has_trait = trait_tiyanki }
				root = {
					any_owned_species = { is_exact_same_species = prevprev }
				}
			}
			else_if = {
				limit = {
					OR = {
						has_trait = trait_clone_soldier_infertile
						has_trait = trait_clone_soldier_infertile_full_potential
					}
				}
				root = {
					# Event 'clones.3' should cover this, but extra safety check.
					has_building = building_clone_army_clone_vat
					NOT = {
						check_variable = {
							which = clone_pops_missing
							value = 0
						}
					}
				}
			}
			else = {
				root = {
					OR = {
						has_building = building_clone_vats
						has_modifier = tiyanki_trophy
						owner = { has_modifier = syamelles_curse }
						AND = {
							has_building = building_posthumous_employment_center
							owner = { has_civic = civic_permanent_employment }
						}
						has_planet_flag = can_organic_assemble_flag #for mod compatibility
					}
				}
			}
		}
	}
	has_population_control = {
		type = no
		country = root.owner
	}
}

# 注：覆盖过is_megacrop了
# This = country
# can_build_branch_offices = {
# 	custom_tooltip = {
# 		fail_text = BRANCH_OFFICE_NOT_MEGACORP
# 		OR = {
# 			is_megacorp = yes
# 			has_civic = civic_galactic_sovereign_megacorp

# 			has_civic = GF_civic_GK	# GF
# 		}
# 	}
# }

# 注：覆盖过is_megacorp了
# This = country
# can_support_branch_offices = {
# 	custom_tooltip = {
# 		fail_text = BRANCH_OFFICE_NOT_FALLEN_EMPIRES
# 		NOR = {
# 			is_country_type = fallen_empire
# 			is_country_type = awakened_fallen_empire
# 		}
# 	}
# 	custom_tooltip = {
# 		fail_text = BRANCH_OFFICE_NOT_ON_MEGACORP_PLANET
# 		NOR = {
# 			is_megacorp = yes
# 			has_civic = civic_galactic_sovereign_megacorp
# 			has_civic = GF_civic_GK
# 		}
# 	}
# 	custom_tooltip = {
# 		fail_text = BRANCH_OFFICE_NOT_REGULAR_EMPIRE
# 		is_gestalt = no
# 	}
# 	custom_tooltip = {
# 		fail_text = BRANCH_OFFICE_NOT_ADVANCED_PRE_FTL
# 		if = {
# 			limit = {
# 				is_primitive = yes
# 				is_gestalt = no
# 			}
# 			OR = {
# 				has_pre_ftl_age = atomic_age
# 				has_pre_ftl_age = early_space_age
# 			}
# 		}
# 	}
# }


# This = species one
# Root = species two
can_crossbreed_species = {
	is_crossbreeding_possible = yes
	root = { is_crossbreeding_possible = yes }
	NOR = {
		has_trait = GF_trait_doll	# GF
		is_subspecies = root
		root = { is_subspecies = prev }
	}
}
































#this/root = pop
#checked if job's possible_precalc = can_fill_specialist_job
can_fill_specialist_job = {
	can_fill_specialist_job_trigger = yes
	# Defined in 01_scripted_triggers_jobs.txt

	if = { # GF
		limit = { has_trait = GF_trait_doll }
		GF_can_doll_fill_specialist_job = yes
	}
}

#this/root = pop
#checked if job's possible_precalc = can_fill_ruler_job
can_fill_ruler_job = {
	if = {
		limit = {
			exists = owner
			owner = {
				has_origin = origin_necrophage
				has_trait = trait_necrophage
			}
		}
		custom_tooltip = {
			text = RULER_JOB_NECROPHAGE_TRIGGER
			has_trait = trait_necrophage
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
		}
	}
	else = {
		custom_tooltip = RULER_JOB_TRIGGER
		hidden_trigger = {
			NOT = { has_ethic = ethic_gestalt_consciousness }
			exists = owner
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			# Rule out Traits for servitude & lack of free will
			NOR = {
				has_trait = trait_syncretic_proles
				can_think = no
			}
			# Rule out Machine Pops, unless they're rendered sapient
			OR = {
				NOT = { has_trait = trait_mechanical }
				AND = {
					owner = { has_technology = tech_synthetic_workers }
					owner = { has_policy_flag = ai_full_rights }
				}
			}
			# Rule out Organic Trophies
			NOT = {
				has_citizenship_type = {
					type = citizenship_organic_trophy
					country = owner
				}
			}
			# Rule out violations of the 'Right to Work' Resolution (prioritises organic workers)
			if = {
				limit = {
					divinity_right_to_work_job_check_trigger_exempt = no
				}
				divinity_right_to_work_job_check_trigger_ruler = yes
			}
		}
		if = { # GF
			limit = { has_trait = GF_trait_doll }
			GF_can_doll_fill_ruler_job = yes
		}
	}
}

# This = leader, leader we'd like to trade
# Root = country, country that owns the leader currently
# From = country, country that would receive the leader
can_trade_leader = {
	# The leader must have a trait from a specialist subject type.
	this = {
		OR = {
			AND = {
				has_specialist_subject_leader_trait = yes
				is_councilor = no
				is_heir = no
			}
			# GF
			GF_can_trade_robotic_leader = yes
		}
	}
	OR = {
		AND = { # Either from subject to Overlord
			ROOT = {
				is_subject = yes
			}
			FROM = {
				is_overlord_to = ROOT
			}
		}
		AND = { # Or from a tactical cogitator empire to a NON tactical cogitator empire
			ROOT = { has_valid_civic = civic_machine_tactical_algorithms }
			FROM = {
				NOT = { has_valid_civic = civic_machine_tactical_algorithms }
				is_fallen_empire = no
				NOT = {
					any_owned_leader = {
						has_trait = leader_trait_tactical_algorithms
					}
				}
			}
		}
	}
	# The subject and overlord must both be regular empires, machine intelligences or hive-minds.
	OR = {
		AND = {
			ROOT = {
				is_regular_empire = yes
			}
			FROM = {
				is_regular_empire = yes
			}
		}
		AND = {
			ROOT = {
				is_machine_empire = yes
			}
			FROM = {
				is_machine_empire = yes
			}
		}
		AND = {
			ROOT = {
				is_hive_empire = yes
			}
			FROM = {
				is_hive_empire = yes
			}
		}
		AND = { # Tactical Cogitator option
			ROOT = {
				has_valid_civic = civic_machine_tactical_algorithms
			}
			FROM = {
				OR = {
					is_regular_empire = yes
					is_hive_empire = yes
					is_machine_empire = yes
				}
				NOT = { has_country_flag = no_murdering_tactical_leaders }
				NOT = {
					any_owned_leader = {
						has_trait = leader_trait_tactical_algorithms
					}
				}
			}
		}
	}
	# Can't trade gestalt nodes
	is_gestalt_node = no
	# The overlord can't be a fallen or awakened empire.
	ROOT = {
		NAND = {
			is_overlord = yes
			OR = {
				is_country_type = fallen_empire
				is_country_type = awakened_fallen_empire
			}
		}
	}
	NOR = {
		has_trait = leader_trait_fotd_scientist
		has_trait = leader_trait_fotd_commander
	}
}